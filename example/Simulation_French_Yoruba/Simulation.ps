%!PS-Adobe-2.0
%%Creator: gnuplot 4.6 patchlevel 2
%%CreationDate: Mon Jan 17 21:20:30 2022
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 2)
  /Author (mchintalapati)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jan 17 21:20:30 2022)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
770 448 M
63 0 V
6114 0 R
-63 0 V
686 448 M
(-0.01) Rshow
1.000 UL
LTb
LCb setrgbcolor
770 1143 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 0) Rshow
1.000 UL
LTb
LCb setrgbcolor
770 1838 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 0.01) Rshow
1.000 UL
LTb
LCb setrgbcolor
770 2533 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 0.02) Rshow
1.000 UL
LTb
LCb setrgbcolor
770 3229 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 0.03) Rshow
1.000 UL
LTb
LCb setrgbcolor
770 3924 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 0.04) Rshow
1.000 UL
LTb
LCb setrgbcolor
770 4619 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 0.05) Rshow
1.000 UL
LTb
LCb setrgbcolor
1245 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2) Cshow
1.000 UL
LTb
LCb setrgbcolor
1879 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 4) Cshow
1.000 UL
LTb
LCb setrgbcolor
2512 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 6) Cshow
1.000 UL
LTb
LCb setrgbcolor
3146 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 8) Cshow
1.000 UL
LTb
LCb setrgbcolor
3779 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 10) Cshow
1.000 UL
LTb
LCb setrgbcolor
4413 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 12) Cshow
1.000 UL
LTb
LCb setrgbcolor
5046 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 14) Cshow
1.000 UL
LTb
LCb setrgbcolor
5680 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 16) Cshow
1.000 UL
LTb
LCb setrgbcolor
6313 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 18) Cshow
1.000 UL
LTb
LCb setrgbcolor
6947 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 20) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
770 4619 N
770 448 L
6177 0 V
0 4171 V
-6177 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(Weighted Covariance) Cshow
grestore
LTb
LCb setrgbcolor
3858 98 M
(Genetic Distance \(cM\)) Cshow
LTb
3858 4829 M
(DATES: Simulation) Cshow
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UP
1.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
6296 4486 M
(data) Rshow
LT0
770 4340 Pls
802 4255 Pls
833 4052 Pls
865 3801 Pls
897 3666 Pls
928 3635 Pls
960 3488 Pls
992 3424 Pls
1023 3385 Pls
1055 3105 Pls
1087 3227 Pls
1118 3034 Pls
1150 3034 Pls
1182 3064 Pls
1213 2805 Pls
1245 2640 Pls
1277 2682 Pls
1309 2528 Pls
1340 2466 Pls
1372 2548 Pls
1404 2573 Pls
1435 2520 Pls
1467 2332 Pls
1499 2120 Pls
1530 2173 Pls
1562 2161 Pls
1594 1953 Pls
1625 2293 Pls
1657 2130 Pls
1689 2098 Pls
1720 2082 Pls
1752 1920 Pls
1784 1688 Pls
1815 1783 Pls
1847 1606 Pls
1879 1747 Pls
1910 1657 Pls
1942 1745 Pls
1974 1915 Pls
2005 1912 Pls
2037 1840 Pls
2069 1771 Pls
2100 1827 Pls
2132 1662 Pls
2164 1798 Pls
2195 1987 Pls
2227 1771 Pls
2259 1774 Pls
2290 1713 Pls
2322 1783 Pls
2354 1636 Pls
2386 1801 Pls
2417 1783 Pls
2449 1815 Pls
2481 1789 Pls
2512 1793 Pls
2544 1756 Pls
2576 1706 Pls
2607 1544 Pls
2639 1569 Pls
2671 1625 Pls
2702 1454 Pls
2734 1449 Pls
2766 1327 Pls
2797 1566 Pls
2829 1570 Pls
2861 1499 Pls
2892 1564 Pls
2924 1417 Pls
2956 1388 Pls
2987 1402 Pls
3019 1520 Pls
3051 1595 Pls
3082 1501 Pls
3114 1519 Pls
3146 1529 Pls
3177 1526 Pls
3209 1557 Pls
3241 1587 Pls
3272 1463 Pls
3304 1413 Pls
3336 1475 Pls
3368 1536 Pls
3399 1559 Pls
3431 1496 Pls
3463 1470 Pls
3494 1217 Pls
3526 1407 Pls
3558 1330 Pls
3589 1412 Pls
3621 1439 Pls
3653 1238 Pls
3684 1361 Pls
3716 1423 Pls
3748 1521 Pls
3779 1402 Pls
3811 1299 Pls
3843 1341 Pls
3874 1394 Pls
3906 1326 Pls
3938 1330 Pls
3969 1398 Pls
4001 1433 Pls
4033 1383 Pls
4064 1268 Pls
4096 1266 Pls
4128 1180 Pls
4159 1280 Pls
4191 1296 Pls
4223 1478 Pls
4254 1304 Pls
4286 1130 Pls
4318 1162 Pls
4349 1135 Pls
4381 1200 Pls
4413 1082 Pls
4445 999 Pls
4476 958 Pls
4508 1044 Pls
4540 1093 Pls
4571 1040 Pls
4603 1012 Pls
4635 1249 Pls
4666 1156 Pls
4698 1283 Pls
4730 1326 Pls
4761 1056 Pls
4793 1085 Pls
4825 1132 Pls
4856 1241 Pls
4888 1320 Pls
4920 1409 Pls
4951 1152 Pls
4983 1160 Pls
5015 1161 Pls
5046 1163 Pls
5078 1250 Pls
5110 1114 Pls
5141 1205 Pls
5173 1193 Pls
5205 1283 Pls
5236 1120 Pls
5268 1035 Pls
5300 1125 Pls
5331 1101 Pls
5363 1205 Pls
5395 1140 Pls
5427 1188 Pls
5458 1126 Pls
5490 1175 Pls
5522 1209 Pls
5553 1053 Pls
5585 982 Pls
5617 883 Pls
5648 985 Pls
5680 922 Pls
5712 1019 Pls
5743 681 Pls
5775 730 Pls
5807 866 Pls
5838 900 Pls
5870 936 Pls
5902 917 Pls
5933 1003 Pls
5965 910 Pls
5997 1095 Pls
6028 937 Pls
6060 1131 Pls
6092 1176 Pls
6123 980 Pls
6155 1154 Pls
6187 1072 Pls
6218 997 Pls
6250 840 Pls
6282 1196 Pls
6313 1003 Pls
6345 1089 Pls
6377 1127 Pls
6408 995 Pls
6440 1032 Pls
6472 1075 Pls
6504 1165 Pls
6535 1122 Pls
6567 1042 Pls
6599 1203 Pls
6630 1028 Pls
6662 1167 Pls
6694 1004 Pls
6725 768 Pls
6757 946 Pls
6789 986 Pls
6820 1128 Pls
6852 1128 Pls
6884 907 Pls
6915 1127 Pls
6947 988 Pls
6579 4486 Pls
% End plot #1
% Begin plot #2
1.000 UL
LT1
LC1 setrgbcolor
LCb setrgbcolor
6296 4346 M
(fit) Rshow
LT1
6380 4346 M
399 0 V
770 4055 M
32 -104 V
31 -100 V
32 -96 V
32 -92 V
31 -90 V
32 -86 V
32 -83 V
31 -81 V
32 -77 V
32 -75 V
31 -71 V
32 -70 V
32 -67 V
31 -64 V
32 -63 V
32 -60 V
32 -57 V
31 -56 V
32 -54 V
32 -52 V
31 -50 V
32 -48 V
32 -47 V
31 -45 V
32 -43 V
32 -42 V
31 -40 V
32 -39 V
32 -37 V
31 -36 V
32 -35 V
32 -33 V
31 -33 V
32 -31 V
32 -30 V
31 -29 V
32 -28 V
32 -27 V
31 -26 V
32 -25 V
32 -24 V
31 -24 V
32 -22 V
32 -22 V
31 -21 V
32 -20 V
32 -19 V
31 -19 V
32 -18 V
32 -18 V
32 -17 V
31 -16 V
32 -15 V
32 -16 V
31 -14 V
32 -14 V
32 -14 V
31 -13 V
32 -12 V
32 -12 V
31 -12 V
32 -11 V
32 -11 V
31 -11 V
32 -10 V
32 -10 V
31 -9 V
32 -9 V
32 -9 V
31 -8 V
32 -9 V
32 -7 V
31 -8 V
32 -7 V
32 -7 V
31 -7 V
32 -7 V
32 -6 V
31 -6 V
32 -6 V
32 -6 V
32 -5 V
31 -5 V
32 -5 V
32 -5 V
31 -5 V
32 -5 V
32 -4 V
31 -4 V
32 -4 V
32 -4 V
31 -4 V
32 -4 V
32 -3 V
31 -4 V
32 -3 V
32 -3 V
31 -3 V
32 -3 V
32 -3 V
31 -3 V
32 -2 V
stroke 4001 1226 M
32 -3 V
31 -2 V
32 -3 V
32 -2 V
31 -2 V
32 -2 V
32 -2 V
31 -2 V
32 -2 V
32 -2 V
31 -2 V
32 -1 V
32 -2 V
32 -2 V
31 -1 V
32 -2 V
32 -1 V
31 -2 V
32 -1 V
32 -1 V
31 -1 V
32 -2 V
32 -1 V
31 -1 V
32 -1 V
32 -1 V
31 -1 V
32 -1 V
32 -1 V
31 -1 V
32 0 V
32 -1 V
31 -1 V
32 -1 V
32 -1 V
31 0 V
32 -1 V
32 -1 V
31 0 V
32 -1 V
32 -1 V
31 0 V
32 -1 V
32 0 V
32 -1 V
31 0 V
32 -1 V
32 0 V
31 -1 V
32 0 V
32 0 V
31 -1 V
32 0 V
32 -1 V
31 0 V
32 0 V
32 -1 V
31 0 V
32 0 V
32 -1 V
31 0 V
32 0 V
32 0 V
31 -1 V
32 0 V
32 0 V
31 0 V
32 -1 V
32 0 V
31 0 V
32 0 V
32 0 V
31 -1 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
32 -1 V
31 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
31 -1 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
31 0 V
32 0 V
% End plot #2
stroke
LTb
LCb setrgbcolor
770 4619 N
770 448 L
6177 0 V
0 4171 V
-6177 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
